generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Exclude_Year {
  exyear Int @id
}

model Reflibrarytype {
  id          Int       @id @default(autoincrement())
  librarytype String
  library     Library[]
}

model Reflibraryregion {
  id            Int       @id @default(autoincrement())
  libraryregion String
  library       Library[]
}

model Language {
  id                     Int                      @id @default(autoincrement())
  short                  String
  full                   String
  List_AV_Language       List_AV_Language[]
  List_EBook_Language    List_EBook_Language[]
  List_EJournal_Language List_EJournal_Language[]
}

model Library_Year {
  id                            Int                            @id @default(autoincrement())
  library                       Int?
  is_open_for_editing           Boolean?                       @default(false)
  admin_notes                   String?
  year                          Int
  updated_at                    DateTime
  is_active                     Boolean?                       @default(true)
  Electronic                    Electronic?
  Electronic_Books              Electronic_Books?
  Entry_Status                  Entry_Status?
  Fiscal_Support                Fiscal_Support?
  LibraryYear_ListAV            LibraryYear_ListAV[]
  LibraryYear_ListEBook         LibraryYear_ListEBook[]
  LibraryYear_ListEJournal      LibraryYear_ListEJournal[]
  Library                       Library?                       @relation(fields: [library], references: [id])
  List_AV                       List_AV[]
  List_EBook                    List_EBook[]
  List_EJournal                 List_EJournal[]
  Monographic_Acquisitions      Monographic_Acquisitions?
  Other_Holdings                Other_Holdings?
  Personnel_Support             Personnel_Support?
  Public_Services               Public_Services?
  Serials                       Serials?
  Unprocessed_Backlog_Materials Unprocessed_Backlog_Materials?
  Volume_Holdings               Volume_Holdings?
}

model User {
  id           Int            @id @default(autoincrement())
  username     String         @unique
  password     String
  isactive     Boolean        @default(true)
  lastlogin_at DateTime?
  firstname    String?
  lastname     String?
  User_Library User_Library[]
  User_Roles   Users_Roles[]
}

model User_Library {
  user_id    Int
  library_id Int
  Library    Library @relation(fields: [library_id], references: [id])
  User       User    @relation(fields: [user_id], references: [id])

  @@unique([user_id, library_id])
}

model Role {
  id         Int           @id @default(autoincrement())
  role       String
  name       String
  User_Roles Users_Roles[]
}

model Users_Roles {
  user_id Int
  role_id Int
  Role    Role @relation(fields: [role_id], references: [id])
  User    User @relation(fields: [user_id], references: [id])

  @@unique([user_id, role_id])
}
