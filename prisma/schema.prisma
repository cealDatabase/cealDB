generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model Reflibrarytype {
  id          Int       @id @default(autoincrement())
  librarytype String
  library     Library[]
}

model Reflibraryregion {
  id            Int       @id @default(autoincrement())
  libraryregion String
  library       Library[]
}

model Language {
  id    Int    @id @default(autoincrement())
  short String
  full  String
}

model Library {
  id                             Int       @id @default(autoincrement())
  type                           Int
  library_name                   String
  plilaw                         Boolean
  plimed                         Boolean
  plisubmitter_first_name        String?
  plisubmitter_last_name         String?
  pliposition_title              String?
  pliwork_phone                  String?
  plie_mail                      String
  plifax_number                  String?
  pliinput_as_of_date            DateTime?
  password                       String?
  plibibliographic               String?
  pliconsortia                   String?
  plisystem_vendor               String?
  pliopac                        Boolean?
  plihome_page                   String?
  plionline_catalog              String?
  pliunique                      Boolean?
  pliestablishedyear             String?
  library_number                 Int
  pliregion                      Int?
  collection_title               String?
  collection_incharge_title      String?
  collection_organized_under     String?
  collection_head_reports_to     String?
  collection_top_department      String?
  collection_next_position_title String?
  collection_other_departments   String?
  collection_librarians_groups   String?
  collection_type                String?
  shelving_type                  String?
  consultation_type              String?
  teaching_type                  String?
  acquisition_type               String?
  cataloging_type                String?
  circulation_type               String?
  date_last_changed              DateTime?
  notes                          String?
  hideinlibrarylist              Boolean?

  libraryRegion Reflibraryregion? @relation(fields: [pliregion], references: [id])
  libraryType   Reflibrarytype    @relation(fields: [type], references: [id])
  User_Library  User_Library[]
}

model User {
  id           Int            @id @default(autoincrement())
  username     String         @unique
  password     String
  isactive     Boolean        @default(true)
  lastlogin_at DateTime?
  firstname    String?
  lastname     String?
  User_Library User_Library[]
  User_Roles   Users_Roles[]
}

model User_Library {
  user_id    Int
  library_id Int
  User       User    @relation(fields: [user_id], references: [id])
  Library    Library @relation(fields: [library_id], references: [id])

  @@unique([user_id, library_id])
}

model Role {
  id         Int           @id @default(autoincrement())
  role       String
  name       String
  User_Roles Users_Roles[]
}

model Users_Roles {
  user_id Int
  role_id Int
  User    User @relation(fields: [user_id], references: [id])
  Role    Role @relation(fields: [role_id], references: [id])

  @@unique([user_id, role_id])
}
